#!/usr/bin/env python

import logging

import server
import ssdeep

import shivaaddnewrecord
import shivaprocessold


def decide(mailFields, key, exeSql, msgMailRequest):
    logging.info("[+]Inside shivadecide module.")
    records = server.QueueReceiver.records


    # Checking if we have any item in our global list.
    # If no item: then we will directly push spam details into the list
    # Else: Do the processing.

    if not records:
        logging.info("[+]shivadecide Module: This is the first spam. Sending directly to shivaaddnewrecord Module.")
        shivaaddnewrecord.main(mailFields, key, exeSql, msgMailRequest)# Directly calling the module that will push these entries in our list 

    else:
        logging.info("[+]shivadecide Module: Old spams found in list. Setting threshold.")
        if mailFields['html'][-6:-0] is "SHIVA" or mailFields['html'][-6:-0] is "SHIVA":
            logging.debug("[+]In shivadecide: This spam contains magic string.")
            threshold = 90
        elif mailFields['text']:
            threshold = 75                    #threshhold is in test stage
        else:
            threshold = 85

        logging.info("[+]shivadecide Module: Threshold is %d" % threshold)


        oriLen   = mailFields['len']
        logging.info("[+]shivadecide Module: Original length is %d" % oriLen)
        minLen, maxLen = int(oriLen * 0.90), int(oriLen * 1.10)
        #minLen, maxLen = int(oriLen * 0.95), int(oriLen * 1.05)

        logging.info("[+]shivadecide Module: Min. Len and Max. Len are %d, %d" %(minLen, maxLen))

        count = 0
        for record in records:

            if record['len'] >= minLen and record['len'] <= maxLen:

                if mailFields['s_id'] is record['s_id']:
                    logging.info("[+]shivadecide Module: MD5 matched with old spam. Not calculating SSDEEP.")
                    shivaprocessold.main(mailFields, record['s_id'], exeSql, key, msgMailRequest)

                else:
                    ratio = ssdeep.compare(mailFields['ssdeep'], record['ssdeep'])
                    logging.info("[+]shivadecide Module: Ratio is %d" % ratio)

                    if ratio >= threshold:
                        logging.info("[+]shivadecide Module: Old spam found. Sending it to shivaprocessold Module.")
                        shivaprocessold.main(mailFields, record['s_id'], exeSql, key, msgMailRequest)
                        break

            count += 1

        if count is len(records):
            logging.info("[+]shivadecide Module: No old record found. Sending to shivaaddnewrecord Module.")
            shivaaddnewrecord.main(mailFields, key, exeSql, msgMailRequest)
