"""
Module deals with new spams. This creates a new dictionary and inserts in on first position in our list.
This also relays the spam, if counter has not been reached.
"""

import logging
import server
import shutil
import ShivaConfig
import datetime
import MySQLdb as mdb
import ShivaTackleQueue


def main(mailFields, key, exeSql, msgMailRequest):
  logging.info("Inside ShivaAddNewRecord Module.")
  records = server.QueueReceiver.records
  source = ShivaConfig.queuePath + key
  destination = '/home/template/dumps/' + key
  
  logging.info("[+]ShivaAddNewRecord Module: Trying to dump raw mail into the local directory.")
  shutil.copy2(source, destination) #  shutil.copy2() copies the meta-data too
  
  newRecord = {'headers':mailFields['headers'], 'to':mailFields['to'], 'from':mailFields['from'], 'subject':mailFields['subject'], 'date':mailFields['date'], 'firstSeen':mailFields['firstSeen'], 'lastSeen':mailFields['lastSeen'], 'firstRelayed':mailFields['firstRelayed'], 'lastRelayed':mailFields['lastRelayed'], 'sourceIP':mailFields['sourceIP'], 'sensorID':mailFields['sensorID'], 'text':mailFields['text'], 'html':mailFields['html'], 'inlineFileName':mailFields['inlineFileName'], 'inlineFile':mailFields['inlineFile'], 'inlineFileMd5':mailFields['inlineFileMd5'], 'attachmentFileName': mailFields['attachmentFileName'], 'attachmentFile':mailFields['attachmentFile'], 'attachmentFileMd5':mailFields['attachmentFileMd5'], 'links':mailFields['links'], 'spam_id':mailFields['spam_id'], 'spamMd5':mailFields['spamMd5'], 'len':mailFields['len'], 'counter':1, 'relayed' : 0}
  
  
  if int(server.QueueReceiver.totalRelay) <= ShivaConfig.relayCounter:
    logging.info("[+]ShivaAddNewRecord Module: Relay counter has not reached limit yet. I shall relay this.")
    ShivaTackleQueue.process_message(msgMailRequest)
    newRecord['relayed'] += 1
    server.QueueReceiver.totalRelay += 1
  
  else:
    logging.critical("[+]ShivaAddNewRecord Module: Limit for this hour has been reached. Not relaying. :(")
 
  logging.info("[+]ShivaAddNewRecord Module: Adding spam's detail into global dictionary.")
  
  records.insert(0, newRecord) #Inserting new record at the first position so that the same types of mail following it can differentiated in a fast manner.
  del newRecord
