"""
This module inserts data into DB for new combo spams. Old combo stuff is all handled by ShivaOldSpam module
"""
import server
import os, sys, logging
import MySQLdb as mdb
import ShivaConfig, ShivaTackleQueue
import time, datetime

#mailFields = {'to':'', 'from':'', 'subject':'', 'date':'', 'text':'', 'html':'', 'inlineFileName':[], 'inlineFile':[], 'inlineFileMd5':[], 'attachmentFileName':[], 'attachmentFile':[], 'attachmentFileMd5':[], 'links':[]}


dataBase = "spamPot09252012"


def pushIntoDB(mailFields, key, msgMailRequest, exeSql):
  logging.critical("[!] --------- Inside ShivaNewSpam module -----------------")
  
  
  
  insert_spam = "INSERT INTO spam (`to`, `from`, `subject`, `textMessage`, `htmlMessage`, `totalCounter`, `id`) VALUES('"+str(mailFields['to'])+"', '"+str(mailFields['from'])+"', '"+str(mailFields['subject'])+"', '"+str(mailFields['text'])+"', '"+str(mailFields['html'])+"', '1', '"+str(mailFields['spam_id'])+"')"
  
  try:  
    exeSql.execute(insert_spam)
  except mdb.Error, e:
    logging.critical("[-] Error (ShivaNewSpam - insert_spam) - %d: %s" % (e.args[0], e.args[1]))
    ShivaConfig.errorHandling(key, msgMailRequest)
    return None
  
  insert_sdate = "INSERT INTO sdate (`date`, `firstSeen`, `lastSeen`, `todaysCounter`) VALUES('"+str(mailFields['date'])+"', '"+str(mailFields['firstSeen'])+"', '"+str(mailFields['lastSeen'])+"', '1')"
  try:
    exeSql.execute(insert_sdate)
  except mdb.Error, e:
    logging.critical("[-] Error (ShivaNewSpam: insert_sdate) - %d: %s" % (e.args[0], e.args[1]))
    ShivaConfig.errorHandling(key, msgMailRequest)
    return None
  
  insert_sdate_spam = "INSERT INTO sdate_spam (`spam_id`, `date_id`) VALUES('"+str(mailFields['spam_id'])+"', '"+str(exeSql.lastrowid)+"')"
  
  try:
    exeSql.execute(insert_sdate_spam)
  except mdb.Error, e:
    logging.critical("[-] Error (ShivaNewSpam: insert_sdate_spam) - %d: %s" % (e.args[0], e.args[1]))
    ShivaConfig.errorHandling(key, msgMailRequest)
    return None
  
  insert_ip = "INSERT INTO ip (`date`, `sourceIP`) VALUES('"+str(mailFields['date'])+"', '"+str(mailFields['sourceIP'])+"' )"
  try:
    exeSql.execute(insert_ip)
  except mdb.Error, e:
    logging.critical("[-] Error (ShivaNewSpam: insert_ip) - %d: %s" % (e.args[0], e.args[1]))
    ShivaConfig.errorHandling(key, msgMailRequest)
    return None
  
  insert_ip_spam = "INSERT INTO ip_spam (`spam_id`, `ip_id`) VALUES('"+str(mailFields['spam_id'])+"', '"+str(exeSql.lastrowid)+"' )"
  try:
    exeSql.execute(insert_ip_spam)
  except mdb.Error, e:
    logging.critical("[-] Error (ShivaNewSpam: insert_ip_spam) - %d: %s" % (e.args[0], e.args[1]))
    ShivaConfig.errorHandling(key, msgMailRequest)
    return None
    
  insert_sensor = "INSERT INTO sensor (`date`, `sensorID`) VALUES('"+str(mailFields['date'])+"', '"+str(mailFields['sensorID'])+"' )"
  try:
    exeSql.execute(insert_sensor)
  except mdb.Error, e:
    logging.critical("[-] Error (ShivaNewSpam insert_sensor) - %d: %s" % (e.args[0], e.args[1]))
    ShivaConfig.errorHandling(key, msgMailRequest)
    return None
  
  insert_sensor_spam = "INSERT INTO sensor_spam (`spam_id`, `sensor_id`) VALUES('"+str(mailFields['spam_id'])+"', '"+str(exeSql.lastrowid)+"' )"
  try:
    exeSql.execute(insert_sensor_spam)
  except mdb.Error, e:
    logging.critical("[-] Error (ShivaNewSpam insert_sensor_spam) - %d: %s" % (e.args[0], e.args[1]))
    ShivaConfig.errorHandling(key, msgMailRequest)
    return None
  
  if len(mailFields['attachmentFile']) != 0:			# If attachment is present - insert into DB
    i = 0
    while i < len(mailFields['attachmentFile']):
      insert_attachment = "INSERT INTO attachment (`date`, `md5`, `attachment_file_name`, `attachment_file`, `attachment_file_type`, `spam_id`) VALUES('"+str(mailFields['date'])+"', '"+str(mailFields['attachmentFileMd5'][i])+"', '"+str(mailFields['attachmentFileName'][i])+"', '"+str(mailFields['attachmentFile'][i])+"', '"+str(os.path.splitext(mailFields['attachmentFileName'][i])[1])+"', '"+str(mailFields['spam_id'])+"')"
      i = i + 1
      try:  
	exeSql.execute(insert_attachment)
      except mdb.Error, e:
	logging.critical("[-] Error (ShivaNewSpam insert_attachment) - %d: %s" % (e.args[0], e.args[1]))
	ShivaConfig.errorHandling(key, msgMailRequest)
	return None
  
  if len(mailFields['inlineFile']) != 0:				# If inline file is present - insert into DB
    i = 0
    while i < len(mailFields['inlineFile']):
      insert_inline = "INSERT INTO inline (`date`, `md5`, `inline_file_name`, `inline_file`, `spam_id` ) VALUES('"+str(mailFields['date'])+"', '"+str(mailFields['inlineFileMd5'][i])+"', '"+str(mailFields['inlineFileName'][i])+"', '"+str(mailFields['inlineFile'][i])+"', '"+str(mailFields['spam_id'])+"')"
      i = i + 1
      try:  
	exeSql.execute(insert_inline)
      except mdb.Error, e:
	logging.critical("[-] Error (ShivaNewSpam - insert_inline) - %d: %s" % (e.args[0], e.args[1]))
	ShivaConfig.errorHandling(key, msgMailRequest)
	return None
  
  if len(mailFields['links']) != 0:					# If links are present - insert into DB
    logging.critical("Some links are there")
    i = 0
    while i < len(mailFields['links']):
      insert_link = "INSERT INTO links (`date`, `hyperLink`, `spam_id` ) VALUES('"+str(mailFields['date'])+"', '"+str(mailFields['links'][i])+"', '"+str(mailFields['spam_id'])+"')"
      i = i + 1
      try:  
	exeSql.execute(insert_link)
      except mdb.Error, e:
	logging.critical("[-] Error (ShivaNewSpam - insert_link) - %d: %s" % (e.args[0], e.args[1]))
	ShivaConfig.errorHandling(key, msgMailRequest)
	return None
  
  checkCounter = "SELECT sum(relay.relayCounter) FROM relay WHERE relay.sensorID = '"+ str(mailFields['sensorID'])+"'"
  try:
    exeSql.execute(checkCounter)
  except mdb.Error, e:
    logging.critical("[-] Error (ShivaNewSpam - checkCounter) - %d: %s" % (e.args[0], e.args[1]))
    ShivaConfig.errorHandling(key, msgMailRequest)
    return None
  
  relayCounter = exeSql.fetchone()
  if relayCounter[0] < ShivaConfig.relayCounter:
    logging.critical("ShivaNewSpam: Relaying spam - Relay count for the day has not reached its limit yet")

    insertRelay = "INSERT INTO relay (`date`, `firstRelayed`, `lastRelayed`, `relayCounter`, `totalRelayed`, `spam_id`, `sensorID`) VALUES('"+str(mailFields['date'])+"', '"+str(mailFields['firstRelayed'])+"', '"+str(mailFields['lastRelayed'])+"', '1', '1', '"+str(mailFields['spam_id'])+"', '"+str(mailFields['sensorID'])+"')"

    try:
      exeSql.execute(insertRelay)
    except mdb.Error, e:
      logging.critical("[-] Error (ShivaNewSpam - insertRelay) - %d: %s" % (e.args[0], e.args[1]))
      ShivaConfig.errorHandling(key, msgMailRequest)
      return None
      
    ShivaTackleQueue.process_message(msgMailRequest)  

  else:
    logging.critical("ShivaNewSpam: Relay count for the day has reached - not relaying")
